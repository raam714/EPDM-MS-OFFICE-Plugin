<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>